{"cells":[{"cell_type":"markdown","metadata":{"id":"Nhj5z2l40-Ho"},"source":["# **Exercise**\n","\n","Estimate the location from WIFI Signal Strength\n","\n","\n","\n","\n","The dataset has 2,000 rows and 8 columns. The data contains wifi signal strength observed from 7 wifi devices on a smartphone collected in an indoor space which could be used to estimate the location in one of the four rooms.\n","\n","\n","\n","\n","You can use ANN analysis for this exerise to improve the ANN performance."]},{"cell_type":"code","execution_count":253,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TXtS9i9405Gi","executionInfo":{"status":"ok","timestamp":1679818788243,"user_tz":-480,"elapsed":3200,"user":{"displayName":"Holah Leaon","userId":"03244248187248122017"}},"outputId":"49b3b112-5205-4731-8f18-b4ad26df3f9c"},"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /drive; to attempt to forcibly remount, call drive.mount(\"/drive\", force_remount=True).\n"]}],"source":["#Mounting our Drive to Google Colab\n","from google.colab import drive\n","drive.mount('/drive')"]},{"cell_type":"code","execution_count":254,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"chUND0kc1h0j","executionInfo":{"status":"ok","timestamp":1679818788245,"user_tz":-480,"elapsed":51,"user":{"displayName":"Holah Leaon","userId":"03244248187248122017"}},"outputId":"9b4ec4a1-cb52-4762-809c-006bec1793e3"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Wifi 1  Wifi 2  Wifi 3  Wifi 4  Wifi 5  Wifi 6  Wifi 7  Room\n","0        -64     -56     -61     -66     -71     -82     -81     1\n","1        -68     -57     -61     -65     -71     -85     -85     1\n","2        -63     -60     -60     -67     -76     -85     -84     1\n","3        -61     -60     -68     -62     -77     -90     -80     1\n","4        -63     -65     -60     -63     -77     -81     -87     1\n","...      ...     ...     ...     ...     ...     ...     ...   ...\n","1995     -59     -59     -48     -66     -50     -86     -94     4\n","1996     -59     -56     -50     -62     -47     -87     -90     4\n","1997     -62     -59     -46     -65     -45     -87     -88     4\n","1998     -62     -58     -52     -61     -41     -90     -85     4\n","1999     -59     -50     -45     -60     -45     -88     -87     4\n","\n","[2000 rows x 8 columns]"],"text/html":["\n","  <div id=\"df-8ff0f9fa-d9fa-44fc-802a-f887aa9ec606\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Wifi 1</th>\n","      <th>Wifi 2</th>\n","      <th>Wifi 3</th>\n","      <th>Wifi 4</th>\n","      <th>Wifi 5</th>\n","      <th>Wifi 6</th>\n","      <th>Wifi 7</th>\n","      <th>Room</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>-64</td>\n","      <td>-56</td>\n","      <td>-61</td>\n","      <td>-66</td>\n","      <td>-71</td>\n","      <td>-82</td>\n","      <td>-81</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>-68</td>\n","      <td>-57</td>\n","      <td>-61</td>\n","      <td>-65</td>\n","      <td>-71</td>\n","      <td>-85</td>\n","      <td>-85</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>-63</td>\n","      <td>-60</td>\n","      <td>-60</td>\n","      <td>-67</td>\n","      <td>-76</td>\n","      <td>-85</td>\n","      <td>-84</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>-61</td>\n","      <td>-60</td>\n","      <td>-68</td>\n","      <td>-62</td>\n","      <td>-77</td>\n","      <td>-90</td>\n","      <td>-80</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>-63</td>\n","      <td>-65</td>\n","      <td>-60</td>\n","      <td>-63</td>\n","      <td>-77</td>\n","      <td>-81</td>\n","      <td>-87</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1995</th>\n","      <td>-59</td>\n","      <td>-59</td>\n","      <td>-48</td>\n","      <td>-66</td>\n","      <td>-50</td>\n","      <td>-86</td>\n","      <td>-94</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>1996</th>\n","      <td>-59</td>\n","      <td>-56</td>\n","      <td>-50</td>\n","      <td>-62</td>\n","      <td>-47</td>\n","      <td>-87</td>\n","      <td>-90</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>1997</th>\n","      <td>-62</td>\n","      <td>-59</td>\n","      <td>-46</td>\n","      <td>-65</td>\n","      <td>-45</td>\n","      <td>-87</td>\n","      <td>-88</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>1998</th>\n","      <td>-62</td>\n","      <td>-58</td>\n","      <td>-52</td>\n","      <td>-61</td>\n","      <td>-41</td>\n","      <td>-90</td>\n","      <td>-85</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>1999</th>\n","      <td>-59</td>\n","      <td>-50</td>\n","      <td>-45</td>\n","      <td>-60</td>\n","      <td>-45</td>\n","      <td>-88</td>\n","      <td>-87</td>\n","      <td>4</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2000 rows × 8 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8ff0f9fa-d9fa-44fc-802a-f887aa9ec606')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-8ff0f9fa-d9fa-44fc-802a-f887aa9ec606 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-8ff0f9fa-d9fa-44fc-802a-f887aa9ec606');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":254}],"source":["#Import required libraries\n","import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","\n","from sklearn.model_selection import train_test_split\n","\n","#Dataset for classification\n","path = '/drive/MyDrive/Colab Notebooks/wifi.csv'\n","\n","df = pd.read_csv(path)\n","df"]},{"cell_type":"code","execution_count":255,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rEYT2l-e1zyy","executionInfo":{"status":"ok","timestamp":1679818788245,"user_tz":-480,"elapsed":47,"user":{"displayName":"Holah Leaon","userId":"03244248187248122017"}},"outputId":"e40ca91b-fa62-4380-af2f-d51f8ebfa6a6"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["Wifi 1    0\n","Wifi 2    0\n","Wifi 3    0\n","Wifi 4    0\n","Wifi 5    0\n","Wifi 6    0\n","Wifi 7    0\n","Room      0\n","dtype: int64"]},"metadata":{},"execution_count":255}],"source":["df.isnull().sum()"]},{"cell_type":"code","execution_count":256,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"d5Upj4cu13Dk","executionInfo":{"status":"ok","timestamp":1679818788246,"user_tz":-480,"elapsed":43,"user":{"displayName":"Holah Leaon","userId":"03244248187248122017"}},"outputId":"669a8a59-8a63-4a03-cd33-4586c20f7b30"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(2000, 8)"]},"metadata":{},"execution_count":256}],"source":["df.shape"]},{"cell_type":"code","execution_count":257,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"hNC9A8Nr7EER","executionInfo":{"status":"ok","timestamp":1679818788247,"user_tz":-480,"elapsed":42,"user":{"displayName":"Holah Leaon","userId":"03244248187248122017"}},"outputId":"cdfa17cc-9dac-48e9-ac5b-96d764d68466"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Wifi 1  Wifi 2  Wifi 3  Wifi 4  Wifi 5  Wifi 6  Wifi 7  Room  1  2  3  4\n","0        -64     -56     -61     -66     -71     -82     -81     1  1  0  0  0\n","1        -68     -57     -61     -65     -71     -85     -85     1  1  0  0  0\n","2        -63     -60     -60     -67     -76     -85     -84     1  1  0  0  0\n","3        -61     -60     -68     -62     -77     -90     -80     1  1  0  0  0\n","4        -63     -65     -60     -63     -77     -81     -87     1  1  0  0  0\n","...      ...     ...     ...     ...     ...     ...     ...   ... .. .. .. ..\n","1995     -59     -59     -48     -66     -50     -86     -94     4  0  0  0  1\n","1996     -59     -56     -50     -62     -47     -87     -90     4  0  0  0  1\n","1997     -62     -59     -46     -65     -45     -87     -88     4  0  0  0  1\n","1998     -62     -58     -52     -61     -41     -90     -85     4  0  0  0  1\n","1999     -59     -50     -45     -60     -45     -88     -87     4  0  0  0  1\n","\n","[2000 rows x 12 columns]"],"text/html":["\n","  <div id=\"df-1bd8f4ab-1da7-4495-afb3-68bcfba8eb66\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Wifi 1</th>\n","      <th>Wifi 2</th>\n","      <th>Wifi 3</th>\n","      <th>Wifi 4</th>\n","      <th>Wifi 5</th>\n","      <th>Wifi 6</th>\n","      <th>Wifi 7</th>\n","      <th>Room</th>\n","      <th>1</th>\n","      <th>2</th>\n","      <th>3</th>\n","      <th>4</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>-64</td>\n","      <td>-56</td>\n","      <td>-61</td>\n","      <td>-66</td>\n","      <td>-71</td>\n","      <td>-82</td>\n","      <td>-81</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>-68</td>\n","      <td>-57</td>\n","      <td>-61</td>\n","      <td>-65</td>\n","      <td>-71</td>\n","      <td>-85</td>\n","      <td>-85</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>-63</td>\n","      <td>-60</td>\n","      <td>-60</td>\n","      <td>-67</td>\n","      <td>-76</td>\n","      <td>-85</td>\n","      <td>-84</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>-61</td>\n","      <td>-60</td>\n","      <td>-68</td>\n","      <td>-62</td>\n","      <td>-77</td>\n","      <td>-90</td>\n","      <td>-80</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>-63</td>\n","      <td>-65</td>\n","      <td>-60</td>\n","      <td>-63</td>\n","      <td>-77</td>\n","      <td>-81</td>\n","      <td>-87</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1995</th>\n","      <td>-59</td>\n","      <td>-59</td>\n","      <td>-48</td>\n","      <td>-66</td>\n","      <td>-50</td>\n","      <td>-86</td>\n","      <td>-94</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1996</th>\n","      <td>-59</td>\n","      <td>-56</td>\n","      <td>-50</td>\n","      <td>-62</td>\n","      <td>-47</td>\n","      <td>-87</td>\n","      <td>-90</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1997</th>\n","      <td>-62</td>\n","      <td>-59</td>\n","      <td>-46</td>\n","      <td>-65</td>\n","      <td>-45</td>\n","      <td>-87</td>\n","      <td>-88</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1998</th>\n","      <td>-62</td>\n","      <td>-58</td>\n","      <td>-52</td>\n","      <td>-61</td>\n","      <td>-41</td>\n","      <td>-90</td>\n","      <td>-85</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1999</th>\n","      <td>-59</td>\n","      <td>-50</td>\n","      <td>-45</td>\n","      <td>-60</td>\n","      <td>-45</td>\n","      <td>-88</td>\n","      <td>-87</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2000 rows × 12 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1bd8f4ab-1da7-4495-afb3-68bcfba8eb66')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-1bd8f4ab-1da7-4495-afb3-68bcfba8eb66 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-1bd8f4ab-1da7-4495-afb3-68bcfba8eb66');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":257}],"source":["#One Hot Encoding\n","room_dummies = pd.get_dummies(df['Room'])\n","pd.concat([df,room_dummies],axis =1)"]},{"cell_type":"code","execution_count":258,"metadata":{"id":"PaZEHDMA16wd","executionInfo":{"status":"ok","timestamp":1679818788248,"user_tz":-480,"elapsed":41,"user":{"displayName":"Holah Leaon","userId":"03244248187248122017"}}},"outputs":[],"source":["#Splitting X and Y\n","X = df.drop('Room',axis = 1)\n","Y = room_dummies"]},{"cell_type":"code","source":["X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"762_BAzF-PwC","executionInfo":{"status":"ok","timestamp":1679818788249,"user_tz":-480,"elapsed":41,"user":{"displayName":"Holah Leaon","userId":"03244248187248122017"}},"outputId":"7cf5586f-a3ad-4728-a3ba-b618cfe8d21a"},"execution_count":259,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Wifi 1  Wifi 2  Wifi 3  Wifi 4  Wifi 5  Wifi 6  Wifi 7\n","0        -64     -56     -61     -66     -71     -82     -81\n","1        -68     -57     -61     -65     -71     -85     -85\n","2        -63     -60     -60     -67     -76     -85     -84\n","3        -61     -60     -68     -62     -77     -90     -80\n","4        -63     -65     -60     -63     -77     -81     -87\n","...      ...     ...     ...     ...     ...     ...     ...\n","1995     -59     -59     -48     -66     -50     -86     -94\n","1996     -59     -56     -50     -62     -47     -87     -90\n","1997     -62     -59     -46     -65     -45     -87     -88\n","1998     -62     -58     -52     -61     -41     -90     -85\n","1999     -59     -50     -45     -60     -45     -88     -87\n","\n","[2000 rows x 7 columns]"],"text/html":["\n","  <div id=\"df-e9eb6b7e-3f5d-457d-8397-46f534b21d4f\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Wifi 1</th>\n","      <th>Wifi 2</th>\n","      <th>Wifi 3</th>\n","      <th>Wifi 4</th>\n","      <th>Wifi 5</th>\n","      <th>Wifi 6</th>\n","      <th>Wifi 7</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>-64</td>\n","      <td>-56</td>\n","      <td>-61</td>\n","      <td>-66</td>\n","      <td>-71</td>\n","      <td>-82</td>\n","      <td>-81</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>-68</td>\n","      <td>-57</td>\n","      <td>-61</td>\n","      <td>-65</td>\n","      <td>-71</td>\n","      <td>-85</td>\n","      <td>-85</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>-63</td>\n","      <td>-60</td>\n","      <td>-60</td>\n","      <td>-67</td>\n","      <td>-76</td>\n","      <td>-85</td>\n","      <td>-84</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>-61</td>\n","      <td>-60</td>\n","      <td>-68</td>\n","      <td>-62</td>\n","      <td>-77</td>\n","      <td>-90</td>\n","      <td>-80</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>-63</td>\n","      <td>-65</td>\n","      <td>-60</td>\n","      <td>-63</td>\n","      <td>-77</td>\n","      <td>-81</td>\n","      <td>-87</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1995</th>\n","      <td>-59</td>\n","      <td>-59</td>\n","      <td>-48</td>\n","      <td>-66</td>\n","      <td>-50</td>\n","      <td>-86</td>\n","      <td>-94</td>\n","    </tr>\n","    <tr>\n","      <th>1996</th>\n","      <td>-59</td>\n","      <td>-56</td>\n","      <td>-50</td>\n","      <td>-62</td>\n","      <td>-47</td>\n","      <td>-87</td>\n","      <td>-90</td>\n","    </tr>\n","    <tr>\n","      <th>1997</th>\n","      <td>-62</td>\n","      <td>-59</td>\n","      <td>-46</td>\n","      <td>-65</td>\n","      <td>-45</td>\n","      <td>-87</td>\n","      <td>-88</td>\n","    </tr>\n","    <tr>\n","      <th>1998</th>\n","      <td>-62</td>\n","      <td>-58</td>\n","      <td>-52</td>\n","      <td>-61</td>\n","      <td>-41</td>\n","      <td>-90</td>\n","      <td>-85</td>\n","    </tr>\n","    <tr>\n","      <th>1999</th>\n","      <td>-59</td>\n","      <td>-50</td>\n","      <td>-45</td>\n","      <td>-60</td>\n","      <td>-45</td>\n","      <td>-88</td>\n","      <td>-87</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2000 rows × 7 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e9eb6b7e-3f5d-457d-8397-46f534b21d4f')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-e9eb6b7e-3f5d-457d-8397-46f534b21d4f button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-e9eb6b7e-3f5d-457d-8397-46f534b21d4f');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":259}]},{"cell_type":"code","source":["Y"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"auQsiPHM-P0E","executionInfo":{"status":"ok","timestamp":1679818788250,"user_tz":-480,"elapsed":40,"user":{"displayName":"Holah Leaon","userId":"03244248187248122017"}},"outputId":"73377866-baef-4d27-a362-ade723860d04"},"execution_count":260,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      1  2  3  4\n","0     1  0  0  0\n","1     1  0  0  0\n","2     1  0  0  0\n","3     1  0  0  0\n","4     1  0  0  0\n","...  .. .. .. ..\n","1995  0  0  0  1\n","1996  0  0  0  1\n","1997  0  0  0  1\n","1998  0  0  0  1\n","1999  0  0  0  1\n","\n","[2000 rows x 4 columns]"],"text/html":["\n","  <div id=\"df-0e6fed4a-611a-4d4f-ab32-fdd936a2d6c7\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>1</th>\n","      <th>2</th>\n","      <th>3</th>\n","      <th>4</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1995</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1996</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1997</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1998</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1999</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2000 rows × 4 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0e6fed4a-611a-4d4f-ab32-fdd936a2d6c7')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-0e6fed4a-611a-4d4f-ab32-fdd936a2d6c7 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-0e6fed4a-611a-4d4f-ab32-fdd936a2d6c7');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":260}]},{"cell_type":"code","execution_count":261,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7VklnAB_2OTN","executionInfo":{"status":"ok","timestamp":1679818788250,"user_tz":-480,"elapsed":38,"user":{"displayName":"Holah Leaon","userId":"03244248187248122017"}},"outputId":"1dfb5cc0-eb7c-4034-ef63-ffe6a65931c5"},"outputs":[{"output_type":"stream","name":"stdout","text":["X_train shape (1600, 7)\n","y_train shape (1600, 4)\n","test shape (400, 7)\n","test shape (400, 4)\n"]}],"source":["X_train, X_test, y_train, y_test = train_test_split(X,Y, test_size = 0.2,\n","                                                    random_state = 0)\n","\n","print(\"X_train shape\", X_train.shape)\n","print(\"y_train shape\", y_train.shape)\n","print(\"test shape\", X_test.shape)\n","print(\"test shape\", y_test.shape)"]},{"cell_type":"code","execution_count":262,"metadata":{"id":"ZcbBaVHR2UN5","executionInfo":{"status":"ok","timestamp":1679818788252,"user_tz":-480,"elapsed":37,"user":{"displayName":"Holah Leaon","userId":"03244248187248122017"}}},"outputs":[],"source":["#Normalization\n","#Neural network can do normalisation such as SGD model, but can choose not to normalise for other models\n","from sklearn.preprocessing import StandardScaler\n","scaler = StandardScaler()\n","\n","X_train = scaler.fit_transform(X_train) #fit transform on train  (to get mean and stadard deviation)\n","X_test = scaler.transform(X_test) #only transform on test (to use info from train)"]},{"cell_type":"code","execution_count":263,"metadata":{"id":"t6WtZgUC2XMQ","executionInfo":{"status":"ok","timestamp":1679818788253,"user_tz":-480,"elapsed":37,"user":{"displayName":"Holah Leaon","userId":"03244248187248122017"}}},"outputs":[],"source":["from keras.models import Sequential\n","from keras.layers import Dense #Dense = linear equation (NN uses linear equation)"]},{"cell_type":"code","execution_count":264,"metadata":{"id":"3de-NVyH2YZM","executionInfo":{"status":"ok","timestamp":1679818788254,"user_tz":-480,"elapsed":38,"user":{"displayName":"Holah Leaon","userId":"03244248187248122017"}}},"outputs":[],"source":["#Building the sequential model\n","L1 = 100\n","L2 = 100\n","\n","model = Sequential()\n","model.add(Dense(L1, input_dim = 7, activation = 'relu')) #input_dim is the total of input variable\n","model.add(Dense(L2, activation = 'relu'))\n","\n","#output layer\n","model.add(Dense(4, activation='softmax')) "]},{"cell_type":"code","execution_count":265,"metadata":{"id":"2N6E4ult2kmy","executionInfo":{"status":"ok","timestamp":1679818788255,"user_tz":-480,"elapsed":38,"user":{"displayName":"Holah Leaon","userId":"03244248187248122017"}}},"outputs":[],"source":["#Compile the sequential model\n","model.compile(loss='categorical_crossentropy', metrics =['accuracy'],optimizer ='sgd')"]},{"cell_type":"code","execution_count":266,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"R-eAgH5o2zOs","executionInfo":{"status":"ok","timestamp":1679818790324,"user_tz":-480,"elapsed":2106,"user":{"displayName":"Holah Leaon","userId":"03244248187248122017"}},"outputId":"84b4375f-3329-4e6c-8ad7-cc07a3fe051d"},"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/10\n","32/32 [==============================] - 1s 10ms/step - loss: 1.2716 - accuracy: 0.5131 - val_loss: 1.1872 - val_accuracy: 0.6875\n","Epoch 2/10\n","32/32 [==============================] - 0s 4ms/step - loss: 1.0883 - accuracy: 0.7625 - val_loss: 1.0313 - val_accuracy: 0.7525\n","Epoch 3/10\n","32/32 [==============================] - 0s 3ms/step - loss: 0.9366 - accuracy: 0.7800 - val_loss: 0.8947 - val_accuracy: 0.7700\n","Epoch 4/10\n","32/32 [==============================] - 0s 4ms/step - loss: 0.8070 - accuracy: 0.7937 - val_loss: 0.7755 - val_accuracy: 0.7950\n","Epoch 5/10\n","32/32 [==============================] - 0s 3ms/step - loss: 0.6975 - accuracy: 0.8225 - val_loss: 0.6752 - val_accuracy: 0.8225\n","Epoch 6/10\n","32/32 [==============================] - 0s 3ms/step - loss: 0.6071 - accuracy: 0.8575 - val_loss: 0.5931 - val_accuracy: 0.8675\n","Epoch 7/10\n","32/32 [==============================] - 0s 3ms/step - loss: 0.5334 - accuracy: 0.8856 - val_loss: 0.5262 - val_accuracy: 0.8700\n","Epoch 8/10\n","32/32 [==============================] - 0s 3ms/step - loss: 0.4733 - accuracy: 0.9087 - val_loss: 0.4714 - val_accuracy: 0.9050\n","Epoch 9/10\n","32/32 [==============================] - 0s 3ms/step - loss: 0.4237 - accuracy: 0.9225 - val_loss: 0.4260 - val_accuracy: 0.9250\n","Epoch 10/10\n","32/32 [==============================] - 0s 3ms/step - loss: 0.3822 - accuracy: 0.9406 - val_loss: 0.3879 - val_accuracy: 0.9325\n"]}],"source":["#Training the model for 10 epochs\n","history = model.fit(X_train, y_train, epochs = 10, batch_size =50, validation_data = (X_test,y_test))"]},{"cell_type":"code","source":["#Visualisation\n","acc2 = history.history['accuracy']\n","val_acc = history.history['val_accuracy']\n","loss2 = history.history['loss']\n","val_loss = history.history['val_loss']\n","\n","epochs = range(1,len(acc2)+1)\n","\n","plt.plot(epochs , acc2,'b', label = 'Train Accuracy')\n","plt.plot (epochs, val_acc, 'r', label = 'Test Accuracy')\n","plt.legend()\n","plt.figure()\n","\n","plt.plot(epochs , loss2,'b', label = 'Train Loss')\n","plt.plot (epochs, val_loss, 'r', label = 'Test Loss')\n","plt.legend()\n","plt.figure()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":549},"id":"QXIHCLUjAM3f","executionInfo":{"status":"ok","timestamp":1679818808434,"user_tz":-480,"elapsed":1590,"user":{"displayName":"Holah Leaon","userId":"03244248187248122017"}},"outputId":"741958b4-2a9d-4e04-9d49-40c19550a406"},"execution_count":267,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Figure size 432x288 with 0 Axes>"]},"metadata":{},"execution_count":267},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 0 Axes>"]},"metadata":{}}]},{"cell_type":"code","source":["from keras import initializers\n","from keras import regularizers"],"metadata":{"id":"UHbV1YKuAPRX","executionInfo":{"status":"ok","timestamp":1679818826625,"user_tz":-480,"elapsed":491,"user":{"displayName":"Holah Leaon","userId":"03244248187248122017"}}},"execution_count":268,"outputs":[]},{"cell_type":"code","source":["#Building the sequential model\n","L1 = 100\n","L2 = 100\n","\n","model = Sequential()\n","model.add(Dense(L1, input_dim = 7, activation = 'relu',\n","                kernel_initializer = 'he_normal', # He normal uses normal distribution\n","                kernel_regularizer = regularizers.l2(0.01)))  #regularization can be used for all layers as well\n","model.add(Dense(L2, activation = 'relu'))\n","\n","# model.add(Dropout(rate=0.2))\n","\n","#output layer\n","model.add(Dense(4, activation='softmax')) #only 1 output, Binary so uses sigmoid"],"metadata":{"id":"tGPUqPwdAUv6","executionInfo":{"status":"ok","timestamp":1679818904091,"user_tz":-480,"elapsed":337,"user":{"displayName":"Holah Leaon","userId":"03244248187248122017"}}},"execution_count":269,"outputs":[]},{"cell_type":"code","source":["#Compile the sequential model\n","model.compile(loss='categorical_crossentropy', metrics =['accuracy'],optimizer ='sgd')"],"metadata":{"id":"_Cmaz1m2AihQ","executionInfo":{"status":"ok","timestamp":1679818905732,"user_tz":-480,"elapsed":6,"user":{"displayName":"Holah Leaon","userId":"03244248187248122017"}}},"execution_count":270,"outputs":[]},{"cell_type":"code","source":["#Training the model for 10 epochs #Improved\n","history = model.fit(X_train, y_train, epochs = 10, batch_size =50, validation_data = (X_test,y_test))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8lFDnhhJAjFd","executionInfo":{"status":"ok","timestamp":1679818908679,"user_tz":-480,"elapsed":1551,"user":{"displayName":"Holah Leaon","userId":"03244248187248122017"}},"outputId":"b8b0cd22-155e-4213-e0c1-47d98d31be3e"},"execution_count":271,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/10\n","32/32 [==============================] - 1s 8ms/step - loss: 2.8193 - accuracy: 0.6544 - val_loss: 2.4713 - val_accuracy: 0.8075\n","Epoch 2/10\n","32/32 [==============================] - 0s 4ms/step - loss: 2.3569 - accuracy: 0.8606 - val_loss: 2.2780 - val_accuracy: 0.9025\n","Epoch 3/10\n","32/32 [==============================] - 0s 3ms/step - loss: 2.2114 - accuracy: 0.9237 - val_loss: 2.1729 - val_accuracy: 0.9225\n","Epoch 4/10\n","32/32 [==============================] - 0s 3ms/step - loss: 2.1212 - accuracy: 0.9413 - val_loss: 2.1010 - val_accuracy: 0.9400\n","Epoch 5/10\n","32/32 [==============================] - 0s 4ms/step - loss: 2.0559 - accuracy: 0.9494 - val_loss: 2.0447 - val_accuracy: 0.9425\n","Epoch 6/10\n","32/32 [==============================] - 0s 4ms/step - loss: 2.0045 - accuracy: 0.9519 - val_loss: 1.9987 - val_accuracy: 0.9450\n","Epoch 7/10\n","32/32 [==============================] - 0s 3ms/step - loss: 1.9609 - accuracy: 0.9563 - val_loss: 1.9588 - val_accuracy: 0.9475\n","Epoch 8/10\n","32/32 [==============================] - 0s 4ms/step - loss: 1.9229 - accuracy: 0.9588 - val_loss: 1.9235 - val_accuracy: 0.9525\n","Epoch 9/10\n","32/32 [==============================] - 0s 3ms/step - loss: 1.8886 - accuracy: 0.9588 - val_loss: 1.8912 - val_accuracy: 0.9525\n","Epoch 10/10\n","32/32 [==============================] - 0s 3ms/step - loss: 1.8571 - accuracy: 0.9606 - val_loss: 1.8613 - val_accuracy: 0.9575\n"]}]}],"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMqucx20xT/boVZ8vN6WcpN"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}